<?php

namespace GS\BackOfficeBundle\Repository;

/**
 * ClasseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClasseRepository extends \Doctrine\ORM\EntityRepository
{
    public function alphaNum($annuler,$id){
      $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Classe c where c.anneeScolaire =
       (select max(cl.anneeScolaire) from BackOfficeBundle:Classe cl) and c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)
       AND c.annuler = :annuler ORDER BY c.niveau ASC, c.nom ASC ')
          ->setParameters(array('annuler'=>$annuler,'id'=>$id));
        return $query->getResult();
    }

    public function anneeOrd($annee){
        $query = ClasseRepository::createQueryBuilder('c')
            ->where('c.anneeScolaire = :anneeScolaire')
            ->orderBy('c.niveau')
            ->addOrderBy('c.nom')
            ->setParameter('anneeScolaire',$annee)
            ->getQuery();
        return $query->getResult();

    }

    public function rechNom($search){
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->setParameter('nom','%'.$search.'%')
            ->getQuery();
        return $query->getResult();
    }

    public function rechAnnee($search){
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.anneeScolaire like :anneeScolaire')
            ->setParameter('anneeScolaire','%'.$search.'%')
            ->getQuery();

        return $query->getResult();
    }

    public function anneeOrder(){
        $query = ClasseRepository::createQueryBuilder('c')
            ->select('c.anneeScolaire')
            ->distinct(true)
            ->orderBy('c.anneeScolaire','desc')
            ->getQuery();
        return $query->getResult();
    }

    public function rechNiveau($search){
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.niveau = :niveau')
            ->setParameter('niveau',$search)
            ->getQuery();
        return $query->getResult();
    }

    public function nomNiveau($nom,$niveau) {
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.niveau = :niveau')
            ->andWhere('e.nom like :nom')
            ->setParameters(array('niveau'=>$niveau,'nom'=>'%'.$nom.'%'))
            ->getQuery();
        return $query->getResult();
    }

    public function nomAnnee($nom,$annee) {
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.annee like :annee')
            ->andWhere('e.nom like :nom')
            ->setParameters(array('annee'=>'%'.$annee.'%','nom'=>'%'.$nom.'%'))
            ->getQuery();
        return $query->getResult();
    }

    public function anneeNiveau($annee,$niveau) {
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.niveau = :niveau')
            ->andWhere('e.annee like :annee')
            ->setParameters(array('niveau'=>$niveau,'annee'=>'%'.$annee.'%'))
            ->getQuery();
        return $query->getResult();
    }

    public function nomNiveauAnnee($nom,$niveau,$annee){
        $query = ClasseRepository::createQueryBuilder('e')
            ->where('e.annee like :annee')
            ->andWhere('e.nom like :nom')
            ->andWhere('e.niveau = :niveau')
            ->setParameters(array('annee'=>'%'.$annee.'%','nom'=>'%'.$nom.'%','niveau'=>$niveau))
            ->getQuery();
        return $query->getResult();
    }


    public function allOrdred(){
        $query = ClasseRepository::createQueryBuilder('c')
            ->orderBy('c.niveau')
            ->addOrderBy('c.nom')
            ->getQuery();
        return $query->getResult();
    }
}
