<?php

namespace GS\BackOfficeBundle\Repository;

/**
 * EleveRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EleveRepository extends \Doctrine\ORM\EntityRepository
{
    public function rechercheNumInscri($id,$numInscription){
        $query = EleveRepository::createQueryBuilder('e')
            ->where('e.id <> :id')
            ->andWhere('e.numInscription = :numInscription')
            ->setParameters(array('id'=>$id,'numInscription'=>$numInscription))
            ->getQuery();
      return $query->getResult();
    }

    public function nomP($nom){
        $query = EleveRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->orWhere('e.prenom like :nom')
            ->setParameter('nom','%'.$nom.'%')
            ->getQuery();
        return $query->getResult();
    }

    public function nomPren($nom,$id){
        $query = $this->getEntityManager()->createQuery('select e from BackOfficeBundle:Eleve e where 
e.idEcole = (select ec from BackOfficeBundle:Ecole ec where ec.id = :id) AND
e.nom = :nom 
     or e.prenom = :nom')
            ->setParameters(array('nom'=>$nom,'id'=>$id));
        return $query->getResult();
    }

    public function nomPren2($nom,$prenom,$id){
                    $query = $this->getEntityManager()->createQuery('select e from BackOfficeBundle:Eleve e 
where e.idEcole = (select ec from BackOfficeBundle:Ecole ec where ec.id = :id) AND e.nom = :nom OR 
e.prenom = :nom OR e.prenom = :prenom OR e.nom = :prenom')
            ->setParameters(array('nom'=>$nom,'prenom'=>$prenom,'id'=>$id))
            ;
        return $query->getResult();
    }

    public function alphaNum($annuler,$id){
             $query = $this->getEntityManager()->createQuery('select e from BackOfficeBundle:Eleve e 
where e.idEcole = (select ec from BackOfficeBundle:Ecole ec where ec.id = :id) AND e.annuler = :annuler ORDER BY e.nom')
            ->setParameters(array('annuler'=>$annuler,'id'=>$id))
            ;
        return $query->getResult();
    }

    public function rechNom($search){
        $query = EleveRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->setParameter('nom','%'.$search.'%')
            ->getQuery();
        return $query->getResult();
    }
    public function rechPrenom($search){
        $query = EleveRepository::createQueryBuilder('e')
            ->where('e.prenom like :prenom')
            ->setParameter('prenom','%'.$search.'%')
            ->getQuery();
        return $query->getResult();
    }

    public function nomPrenom($nom,$prenom){
        $query = EleveRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->andWhere('e.prenom like :prenom')
            ->setParameters(array('nom'=>'%'.$nom.'%','prenom'=>'%'.$prenom.'%'))
            ->getQuery();
        return $query->getResult();
    }
}
