<?php

namespace GS\BackOfficeBundle\Repository;

/**
 * EnseignantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnseignantRepository extends \Doctrine\ORM\EntityRepository
{
    public function rechercheCin($id,$cin){
        $query = EnseignantRepository::createQueryBuilder('e')
            ->where('e.id <> :id')
            ->andWhere('e.cin = :cin')
            ->setParameters(array('id'=>$id,'cin'=>$cin))
            ->getQuery();
        return $query->getResult();
    }

    public function rechercheMatricule($id,$matricule){
        $query = EnseignantRepository::createQueryBuilder('e')
            ->where('e.id <> :id')
            ->andWhere('e.matricule = :matricule')
            ->setParameters(array('id'=>$id,'matricule'=>$matricule))
            ->getQuery();
        return $query->getResult();
    }

    public function alphaNum($annuler,$id){

        $query = $this->getEntityManager()->createQuery('select e from BackOfficeBundle:Enseignant e 
where e.idEcole = (select ec from BackOfficeBundle:Ecole ec where ec.id = :id) AND e.annuler = :annuler ORDER BY e.nom')
            ->setParameters(array('id'=>$id,'annuler'=>$annuler));
        return $query->getResult();
    }

    public function rechNom($search){
        $query = EnseignantRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->setParameter('nom','%'.$search.'%')
            ->getQuery();
        return $query->getResult();
    }
    public function rechPrenom($search){
        $query = EnseignantRepository::createQueryBuilder('e')
            ->where('e.prenom like :prenom')
            ->setParameter('prenom','%'.$search.'%')
            ->getQuery();
        return $query->getResult();
    }
    public function nomPren($nom,$id){
       $query = $this->getEntityManager()->createQuery('select e from BackOfficeBundle:Enseignant e where
 e.idEcole = (select ec from BackOfficeBundle:Ecole ec where ec.id = :id)  AND e.nom = :nom 
     or e.prenom = :nom')
           ->setParameters(array('nom'=>$nom,'id'=>$id));
       return $query->getResult();
    }

    public function nomPren2($nom,$prenom,$id){

        $query = $this->getEntityManager()->createQuery('select e from BackOfficeBundle:Enseignant e 
where e.idEcole = (select ec from BackOfficeBundle:Ecole ec where ec.id = :id) AND e.nom = :nom AND e.prenom = :prenom')
            ->setParameters(array('nom'=>$nom,'prenom'=>$prenom,'id'=>$id));
        return $query->getResult();
    }
    public function nomP($nom){
        $query = EnseignantRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->orWhere('e.prenom like :nom')
            ->setParameter('nom','%'.$nom.'%')
            ->getQuery();
        return $query->getResult();
    }
    public function nomPrenom($nom,$prenom){
        $query = EnseignantRepository::createQueryBuilder('e')
            ->where('e.nom like :nom')
            ->andWhere('e.prenom like :prenom')
            ->setParameters(array('nom'=>'%'.$nom.'%','prenom'=>'%'.$prenom.'%'))
            ->getQuery();
        return $query->getResult();
    }


}
