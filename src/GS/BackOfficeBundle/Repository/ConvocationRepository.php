<?php

namespace GS\BackOfficeBundle\Repository;

/**
 * ConvocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConvocationRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAll($lu,$id){
        $a = 'En attente';
        $b = 'Refusé';
        $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
        where c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)
        AND c.lu = :lu AND c.etat = :a or c.etat = :b')
            ->setParameters(array('id'=>$id,'lu'=>$lu,'a'=>$a,'b'=>$b));
        return $query->getResult();
    }

    public function getRows($lu,$id){

        $a = 'En attente';
        $b = 'Refusé';
        $query = $this->getEntityManager()->createQuery('select COUNT (c.id) from BackOfficeBundle:Convocation c 
        where c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)
        AND c.lu = :lu AND c.etat = :a or c.etat = :b')
            ->setParameters(array('id'=>$id,'lu'=>$lu,'a'=>$a,'id'=>$id,'b'=>$b));
        return $query->getSingleScalarResult();

    }

    public function getOrdred($id){

               $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
        where c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)
       ORDER BY c.date DESC ')->setParameter('id',$id)
            ;
        return $query->getResult();
    }

    public function get($idEns,$etat){

        $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
where c.idEns = :id AND c.etat = :etat  ')
            ->setParameters(array('id'=>$idEns,'etat'=>$etat));
        return $query->getResult();
    }


    public function getConv($idP,$etat){
        $lu = true;
        $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
where c.idEleve = (select e from BackOfficeBundle:Eleve e where e.parent = :parent)
AND c.etat = :etat AND c.lu = :lu')
            ->setParameters(array('parent'=>$idP,'etat'=>$etat,'lu'=>$lu));
        return $query->getResult();}


        public function getAllPar($idP){
            $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
where c.idEleve = (select e from BackOfficeBundle:Eleve e where e.parent = :parent) ORDER BY c.date DESC ')
                ->setParameter('parent',$idP);

            return $query->getResult();

        }

    public function getEleve($id,$nom){

        $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
WHERE c.idEleve in (select el from BackOfficeBundle:Eleve el where el.nom LIKE :nom or el.prenom LIKE :nom)
      
       AND c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)')
            ->setParameters(array('id'=>$id,'nom'=>'%'.$nom.'%'))
        ;
        return $query->getResult();
    }

    public function getEns($id,$nom){

        $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
WHERE c.idEns in (select el from BackOfficeBundle:Enseignant el where el.nom LIKE :nom or el.prenom LIKE :nom)
      
       AND c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)')
            ->setParameters(array('id'=>$id,'nom'=>'%'.$nom.'%'))
        ;
        return $query->getResult();
    }


    public function getEnsElv($id,$nom,$nomElv){

        $query = $this->getEntityManager()->createQuery('select c from BackOfficeBundle:Convocation c 
WHERE c.idEns in (select en from BackOfficeBundle:Enseignant en where en.nom LIKE :nom or en.prenom LIKE :nom)
      AND  c.idEleve in (select el from BackOfficeBundle:Eleve el where el.nom LIKE :nomElv or el.prenom LIKE :nomElv)
       AND c.idEcole = (select e from BackOfficeBundle:Ecole e where e.id = :id)')
            ->setParameters(array('id'=>$id,'nom'=>'%'.$nom.'%','nomElv'=>'%'.$nomElv.'%'))
        ;
        return $query->getResult();
    }

}
